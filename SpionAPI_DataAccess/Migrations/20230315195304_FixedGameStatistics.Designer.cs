// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SpionAPI_DataAccess.Data;

#nullable disable

namespace SpionAPI_DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230315195304_FixedGameStatistics")]
    partial class FixedGameStatistics
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SpionAPI_Model.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SpionAPI.Models.GameStatistics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("GameCompleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("GameStarted")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuessDataID")
                        .HasColumnType("int");

                    b.Property<bool>("PantonimePresent")
                        .HasColumnType("bit");

                    b.Property<int>("PlayerCount")
                        .HasColumnType("int");

                    b.Property<bool>("SingerPresent")
                        .HasColumnType("bit");

                    b.Property<bool>("SpyPresent")
                        .HasColumnType("bit");

                    b.Property<bool>("SpyWon")
                        .HasColumnType("bit");

                    b.Property<bool>("UndercoverPresent")
                        .HasColumnType("bit");

                    b.Property<bool>("UndercoverWon")
                        .HasColumnType("bit");

                    b.Property<bool>("UseRelatedWordAsAHint")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("GameStatistics");
                });

            modelBuilder.Entity("SpionAPI.Models.GuessData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("GuessedWord")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastGameUsageTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("RelatedWord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.ToTable("GuessData");
                });

            modelBuilder.Entity("SpionAPI.Models.GuessData", b =>
                {
                    b.HasOne("SpionAPI_Model.Models.User", "CreatedByUser")
                        .WithMany("GuessData")
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByUser");
                });

            modelBuilder.Entity("SpionAPI_Model.Models.User", b =>
                {
                    b.Navigation("GuessData");
                });
#pragma warning restore 612, 618
        }
    }
}
